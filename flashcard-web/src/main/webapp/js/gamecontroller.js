var GameController = (function () {        var isInitialRound;    /**     * Startar en helt ny omgång     */    var startGame = function(deckId){        var flashcards = Decks.getDeck(deckId);        isInitialRound = true;        Deckstate.initFirstRound(flashcards, doNextStep);        Gui.init(currentCardOk, currentCardNok);        showNextCard();        showUpdatedGraph();    };    /**     * Startar en ny genomgång av en kortleken där några kort missats. Anropas som callback från     * börja-visa-missade-kort-knappen i gränssnittet     */    var startMissedCardRound = function(){        isInitialRound = false;        Deckstate.initOtherRound();        showNextCard();    };    /**     * Markerar ett kort som ok och visar den uppdaterade grafen. Används som callback från ok-knappen     */    var currentCardOk = function(){        Deckstate.currentCardOk();        showUpdatedGraph();    };    /**     * Markerar ett kort som nok och visar den uppdaterade grafen. Används som callback från nok-knappen     */    var currentCardNok = function(){        Deckstate.currentCardNok();        showUpdatedGraph();    };    /**     * Hämtar och visar nästa kort utan koll att sådant finns     */    function showNextCard(){        console.log("showNextCard");        var card = Deckstate.nextCard();        Gui.showCard(card);        showUpdatedGraph();    };    function doNextStep(){        if(Deckstate.hasMoreCards()){            showNextCard();        } else if(Deckstate.missedCardsExists()){            if(isInitialRound) {                Gui.showMissedCards(Deckstate.nbrCardsOkFirstRound(), Deckstate.nbrCardsMissed(), startMissedCardRound);            } else {                startMissedCardRound();            }        }  else {            Gui.showFinished(Deckstate.getMissedCardFirstRound());        }    }    function showUpdatedGraph(){        Gui.showUpdatedGraph(            Deckstate.nbrCardsOkFirstRound(),            Deckstate.nbrCardsOkOtherRounds(),            Deckstate.nbrCardsMissed(),            Deckstate.nbrCardsleft());    }        return{        startGame: startGame    };})();